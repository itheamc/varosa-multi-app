// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

import 'core/config/flavor/flavor.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyArFQE5TppyZrwz4nY1AI5cSaiA8J7zP80',
    appId: Flavor.fromEnvironment == Flavor.staging
        ? '1:15645869489:android:366690fc761822e0c16990'
        : Flavor.fromEnvironment == Flavor.dev
        ? '1:15645869489:android:01e489251ae7cdc7c16990'
        : '1:15645869489:android:94f5c6f6a6eda1e0c16990',
    messagingSenderId: '15645869489',
    projectId: 'varosa-multi-app',
    storageBucket: 'varosa-multi-app.firebasestorage.app',
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAAet6bQwbXAMzxHwqf6cyhM80mjqzPtRM',
    appId: Flavor.fromEnvironment == Flavor.staging
        ? '1:15645869489:ios:c651df95db26d7a9c16990'
        : Flavor.fromEnvironment == Flavor.dev
        ? '1:15645869489:ios:f5d1cc36256d39d2c16990'
        : '1:15645869489:ios:586cd259bbf41bdcc16990',
    messagingSenderId: '15645869489',
    projectId: 'varosa-multi-app',
    storageBucket: 'varosa-multi-app.firebasestorage.app',
    iosBundleId: Flavor.fromEnvironment == Flavor.staging
        ? 'com.itheamc.varosaMultiApp.staging'
        : Flavor.fromEnvironment == Flavor.dev
        ? 'com.itheamc.varosaMultiApp.dev'
        : 'com.itheamc.varosaMultiApp',
  );
}
